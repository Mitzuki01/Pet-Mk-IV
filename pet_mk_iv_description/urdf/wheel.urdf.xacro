<?xml version="1.0" encoding="utf-8"?>
<!--
  \licens       Software License Agreement (MIT)
  \file         <workspace>/src/pet_mk_iv_description/urdf/wheel.urdf.xacro
  \authors      stefan.kull@gmail.com (Github ID 'SeniorKullken')
  \repository   https://github.com/kullken/Pet-Mk-IV
  \repository   https://github.com/kullken/pet_mcu_base
  \copyright    
  \description  .xacro macro that defines a wheel   
       
  ____________________________________________________________________________
  \usage
      <robot>
        ....
        <xacro:include filename="$(find pet_mk_iv_description)/urdf/wheel.urdf.xacro"/>
        <xacro:wheel  wheel_prefix="front_left"  
                      origin_xyz="${wheel_axis_distance/2} ${wheel_axis_width/2} ${chassis_height/2}"
                      origin_rpy="0 0 0"/>
        <xacro:wheel  wheel_prefix="front_right" 
                      origin_xyz="${wheel_axis_distance/2} -${wheel_axis_width/2} ${chassis_height/2}"
                      origin_rpy="0 0 0"/>
      </robot>
  ____________________________________________________________________________
  \todo     Maybe refactor existing parameter interface. Adding WHEEL_WEIGHT and Inertial to the list of Xacro-params.

  Xacro common info:
    The entirety of the code below is reproduced whenever the macro is called.
    We use 'params' to add additional arguments to the macro call, 
    which can be simple parameters, or entire code blocks.>

  \reference http://wiki.ros.org/xacro
-->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:macro name="wheel" params="wheel_prefix origin_xyz origin_rpy">
  <xacro:property name="PI" value="3.14159265359"/>    <!-- unit n/a  -->
  <xacro:property name="WHEEL_WEIGHT" value="0.02"/>   <!-- unit kg  -->  

    <link name="${wheel_prefix}_wheel">
      <visual> <!-- name="${wheel_prefix}_wheel_visual"> -->
        <origin xyz="0 0 0" rpy="0.00 ${PI/2} ${PI/2}"/>
        <geometry>
          <cylinder radius="${wheel_diameter/2}" length="${wheel_width}"/>
        </geometry>
        <material name="black"/>    <!-- Color in RViz -->
      </visual>
      <visual> <!-- name="${wheel_prefix}_wheel_visual_2"> -->
        <origin xyz="0 0 0" rpy="0.00 ${PI/2} ${PI/2}"/>
        <geometry>
          <cylinder radius="${wheel_diameter/4}" length="${wheel_width*1.10}"/>
        </geometry>
        <material name="orange"/>    <!-- Color in RViz -->
      </visual>

      <collision name="${wheel_prefix}_wheel_collision">
        <origin xyz="0 0 0" rpy="0.00 ${PI/2} ${PI/2}"/>
        <geometry>
          <cylinder radius="${wheel_diameter/2}" length="${wheel_width}"/>
        </geometry>
      </collision>
      
      <inertial>
        <origin xyz="0 0 0" rpy="0.00 ${PI/2} ${PI/2}"/>
        <mass value="${WHEEL_WEIGHT}" />
        <inertia
          ixx="2.40384090487514E-05"
          ixy="9.21491839222917E-12"
          ixz="1.16650464760408E-11"
          iyy="4.21578178329362E-05"
          iyz="2.56744598636029E-11"
          izz="2.40355678533584E-05"/>
      </inertial>
<!-- from Tianbot-Mini: Left wheel
          ixx="2.40384090487514E-05"
          ixy="9.21491839222917E-12"
          ixz="1.16650464760408E-11"
          iyy="4.21578178329362E-05"
          iyz="2.56744598636029E-11"
          izz="2.40355678533584E-05"
-->
<!-- from Tianbot-Mini: Right wheel
          ixx="2.40403731664504E-05"
          ixy="1.93558318570861E-11"
          ixz="-1.9701375781678E-11"
          iyy="4.21599888385316E-05"
          iyz="3.15208827782047E-12"
          izz="2.4035775665164E-05"
-->
    </link>

    <joint type="continuous" name="${wheel_prefix}_wheel_joint">
      <origin xyz="${origin_xyz}" rpy="${origin_rpy}"/> <!-- Wheel position rel. <parent link> -->
      <child link="${wheel_prefix}_wheel"/>
      <parent link="base_link"/>
      <axis xyz="0 1 0" rpy="0 0 0"/>  <!-- Wheel rotate around Y-axis -->
      <limit effort="10000" velocity="1000"/>
      <joint_properties damping="1.0" friction="1.0"/>
    </joint>

    <!--
       \todo Gazebo-simulator rel. description...=> Move to a separate Gazebo package?
    -->
    <gazebo reference="${wheel_prefix}_wheel">
      <material>Gazebo/Grey</material>
    </gazebo>
    
  </xacro:macro> 
</robot>